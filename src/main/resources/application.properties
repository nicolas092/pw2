# External API Configuration
br.com.pw2.WaAutomateNodejs/mp-rest/url=http://localhost:8002

# Database Configuration
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=nicolas
quarkus.datasource.password=mypassword
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/local

# Hibernate ORM
quarkus.hibernate-orm.database.generation=update

# Logging Configuration
quarkus.log.file.enable=true
quarkus.log.file.format=%d{yyyy-MM-dd HH:mm:ss} %-5p [%c] (%t) %s%e%n
quarkus.log.file.rotation.max-file-size=300M
quarkus.log.file.rotation.rotate-on-boot=false

# Server Configuration
quarkus.http.host=0.0.0.0

# Health UI
quarkus.smallrye-health.ui.enable=true

# Cache Configuration
quarkus.cache.caffeine.chatIdsCache.expire-after-write=10m
quarkus.cache.caffeine.chatIdsCache.maximum-size=100

# OpenTelemetry (Jaeger Tracing)
quarkus.opentelemetry.enabled=true
quarkus.opentelemetry.tracer.exporter.otlp.enabled=true
quarkus.opentelemetry.tracer.exporter.otlp.endpoint=http://jaeger:4317

# Alternative HTTP OTLP Exporter (if needed)
# quarkus.opentelemetry.tracer.exporter.otlp.endpoint=http://jaeger:4318
# quarkus.opentelemetry.tracer.exporter.otlp.protocol=http/protobuf

# Prometheus Metrics
quarkus.metrics.enabled=true
quarkus.micrometer.export.prometheus.enabled=true
quarkus.micrometer.export.prometheus.path=/q/metrics
